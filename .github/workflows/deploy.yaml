name: deploy

on:
  push:
  workflow_dispatch:
    inputs:
      registry_type:
        type: choice
        description: Registry type
        options:
          - private
          - public
        default: private
        required: true
      ecr_repository:
        type: choice
        description: ECR repository name
        options:
          - learninglocker
          - openlrw
          - superset
          - superset-db
          - jupyterhub
          - moodle-xapi
          - moodle-caliper
          - chibichilo-log-processor
          - chibichilo-xapi
          - chibichilo-caliper
        required: true
      image_tag:
        description: Image tag
        required: true

jobs:
  build-and-push:
    runs-on: ubuntu-22.04
    timeout-minutes: 300

    steps:
    - if: inputs.ecr_repository == 'learninglocker' ||
          inputs.ecr_repository == 'openlrw' ||
          inputs.ecr_repository == 'superset' ||
          inputs.ecr_repository == 'superset-db' ||
          inputs.ecr_repository == 'jupyterhub'
      run: |
        echo "BUILD_PATH=${{ inputs.ecr_repository }}/" >> $GITHUB_ENV
    - if: inputs.ecr_repository == 'moodle-xapi'
      run: |
        echo "BUILD_PATH=moodle/xapi/" >> $GITHUB_ENV
    - if: inputs.ecr_repository == 'moodle-caliper'
      run: |
        echo "BUILD_PATH=moodle/caliper/" >> $GITHUB_ENV
    - if: inputs.ecr_repository == 'chibichilo-log-processor'
      run: |
        echo "BUILD_PATH=chibichilo/log-processor/" >> $GITHUB_ENV
    - if: inputs.ecr_repository == 'chibichilo-xapi'
      run: |
        echo "BUILD_PATH=chibichilo/xapi/" >> $GITHUB_ENV
    - if: inputs.ecr_repository == 'chibichilo-caliper'
      run: |
        echo "BUILD_PATH=chibichilo/caliper/" >> $GITHUB_ENV

    - uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registry-type: ${{ inputs.registry_type }}

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ inputs.ecr_repository }}
        IMAGE_TAG: ${{ inputs.image_tag }}
        BUILD_PATH: ${{ env.PATH_TO_DOCKERFILE }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $BUILD_PATH
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
